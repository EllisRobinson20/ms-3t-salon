rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  function canUpdateTelephone() {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['telephone']);
}
function canUpdateEmail() {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['email']);
}
function canUpdateName() {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['name']);
}
function canUpdateGivenReview() {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['givenReview']);
}
  
   match /members/{memberId} {
  allow create: if request.auth.uid != null;
  allow read: if request.auth.uid != null && request.auth.uid == memberId;
  allow update: if request.auth.uid != null && canUpdateTelephone() && request.auth.uid == memberId;
  allow update: if request.auth.uid != null && canUpdateEmail() && request.auth.uid == memberId;
  allow update: if request.auth.uid != null && canUpdateName() && request.auth.uid == memberId;
  allow update: if request.auth.uid != null && canUpdateGivenReview() && request.auth.uid == memberId;
  }  
    match /members/{memberId} {
      allow read: if request.auth.uid != null && request.auth.token.admin in [true];
      allow write: if request.auth.uid != null && request.auth.token.admin in [true];
    }
    match /bookingHistory/{id} {
    allow read: if request.auth.uid != null && request.auth.token.admin in [true];
      allow write: if request.auth.uid != null && request.auth.token.admin in [true];
    }
    match /reviews/{reviewId} {
    allow read: if true;
    allow create: if request.auth.uid != null;
    }
    match /services/{serviceId} {
    allow read: if true;
    }
    match /operatingHours/{id} {
    allow read: if true;
    }
  }
}